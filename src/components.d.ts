/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';

import {
  MatchResults,
} from '@stencil/router';

declare global {
  interface HTMLAppCtaElement extends HTMLStencilElement {
    'linkUrl': string;
    'match': MatchResults;
  }
  var HTMLAppCtaElement: {
    prototype: HTMLAppCtaElement;
    new (): HTMLAppCtaElement;
  };
  interface HTMLElementTagNameMap {
    'app-cta': HTMLAppCtaElement;
  }
  interface ElementTagNameMap {
    'app-cta': HTMLAppCtaElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-cta': JSXElements.AppCtaAttributes;
    }
  }
  namespace JSXElements {
    export interface AppCtaAttributes extends HTMLAttributes {
      'linkUrl'?: string;
      'match'?: MatchResults;
    }
  }
}


declare global {
  interface HTMLAppFooterElement extends HTMLStencilElement {
    'match': MatchResults;
  }
  var HTMLAppFooterElement: {
    prototype: HTMLAppFooterElement;
    new (): HTMLAppFooterElement;
  };
  interface HTMLElementTagNameMap {
    'app-footer': HTMLAppFooterElement;
  }
  interface ElementTagNameMap {
    'app-footer': HTMLAppFooterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-footer': JSXElements.AppFooterAttributes;
    }
  }
  namespace JSXElements {
    export interface AppFooterAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {
  interface HTMLAppHeaderElement extends HTMLStencilElement {
    'backgroundUrl': string;
    'hideButton': boolean;
    'linkUrl': string;
    'match': MatchResults;
  }
  var HTMLAppHeaderElement: {
    prototype: HTMLAppHeaderElement;
    new (): HTMLAppHeaderElement;
  };
  interface HTMLElementTagNameMap {
    'app-header': HTMLAppHeaderElement;
  }
  interface ElementTagNameMap {
    'app-header': HTMLAppHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-header': JSXElements.AppHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHeaderAttributes extends HTMLAttributes {
      'backgroundUrl'?: string;
      'hideButton'?: boolean;
      'linkUrl'?: string;
      'match'?: MatchResults;
    }
  }
}


declare global {
  interface HTMLAppHeroElement extends HTMLStencilElement {
    'backgroundUrl': string;
    'linkUrl': string;
    'match': MatchResults;
  }
  var HTMLAppHeroElement: {
    prototype: HTMLAppHeroElement;
    new (): HTMLAppHeroElement;
  };
  interface HTMLElementTagNameMap {
    'app-hero': HTMLAppHeroElement;
  }
  interface ElementTagNameMap {
    'app-hero': HTMLAppHeroElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-hero': JSXElements.AppHeroAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHeroAttributes extends HTMLAttributes {
      'backgroundUrl'?: string;
      'linkUrl'?: string;
      'match'?: MatchResults;
    }
  }
}


declare global {
  interface HTMLAppMembersElement extends HTMLStencilElement {
    'match': MatchResults;
    'members': any[];
  }
  var HTMLAppMembersElement: {
    prototype: HTMLAppMembersElement;
    new (): HTMLAppMembersElement;
  };
  interface HTMLElementTagNameMap {
    'app-members': HTMLAppMembersElement;
  }
  interface ElementTagNameMap {
    'app-members': HTMLAppMembersElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-members': JSXElements.AppMembersAttributes;
    }
  }
  namespace JSXElements {
    export interface AppMembersAttributes extends HTMLAttributes {
      'match'?: MatchResults;
      'members'?: any[];
    }
  }
}


declare global {
  interface HTMLContentGraphicElement extends HTMLStencilElement {
    'imgUrl': string;
    'match': MatchResults;
    'reverse': boolean;
  }
  var HTMLContentGraphicElement: {
    prototype: HTMLContentGraphicElement;
    new (): HTMLContentGraphicElement;
  };
  interface HTMLElementTagNameMap {
    'content-graphic': HTMLContentGraphicElement;
  }
  interface ElementTagNameMap {
    'content-graphic': HTMLContentGraphicElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'content-graphic': JSXElements.ContentGraphicAttributes;
    }
  }
  namespace JSXElements {
    export interface ContentGraphicAttributes extends HTMLAttributes {
      'imgUrl'?: string;
      'match'?: MatchResults;
      'reverse'?: boolean;
    }
  }
}


declare global {
  interface HTMLAppAboutElement extends HTMLStencilElement {
    'match': MatchResults;
  }
  var HTMLAppAboutElement: {
    prototype: HTMLAppAboutElement;
    new (): HTMLAppAboutElement;
  };
  interface HTMLElementTagNameMap {
    'app-about': HTMLAppAboutElement;
  }
  interface ElementTagNameMap {
    'app-about': HTMLAppAboutElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-about': JSXElements.AppAboutAttributes;
    }
  }
  namespace JSXElements {
    export interface AppAboutAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {
  interface HTMLAppContactElement extends HTMLStencilElement {
    'match': MatchResults;
  }
  var HTMLAppContactElement: {
    prototype: HTMLAppContactElement;
    new (): HTMLAppContactElement;
  };
  interface HTMLElementTagNameMap {
    'app-contact': HTMLAppContactElement;
  }
  interface ElementTagNameMap {
    'app-contact': HTMLAppContactElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-contact': JSXElements.AppContactAttributes;
    }
  }
  namespace JSXElements {
    export interface AppContactAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {
  interface HTMLAppHomeElement extends HTMLStencilElement {
    'match': MatchResults;
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {
  interface HTMLAppServicesElement extends HTMLStencilElement {
    'match': MatchResults;
  }
  var HTMLAppServicesElement: {
    prototype: HTMLAppServicesElement;
    new (): HTMLAppServicesElement;
  };
  interface HTMLElementTagNameMap {
    'app-services': HTMLAppServicesElement;
  }
  interface ElementTagNameMap {
    'app-services': HTMLAppServicesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-services': JSXElements.AppServicesAttributes;
    }
  }
  namespace JSXElements {
    export interface AppServicesAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {
  interface HTMLOpenForgeAppElement extends HTMLStencilElement {

  }
  var HTMLOpenForgeAppElement: {
    prototype: HTMLOpenForgeAppElement;
    new (): HTMLOpenForgeAppElement;
  };
  interface HTMLElementTagNameMap {
    'open-forge-app': HTMLOpenForgeAppElement;
  }
  interface ElementTagNameMap {
    'open-forge-app': HTMLOpenForgeAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'open-forge-app': JSXElements.OpenForgeAppAttributes;
    }
  }
  namespace JSXElements {
    export interface OpenForgeAppAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
