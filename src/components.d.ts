/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */
declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';

import {
  MatchResults,
} from '@stencil/router';

import {
  AppCta as AppCta
} from './components/app-cta/app-cta';

declare global {
  interface HTMLAppCtaElement extends AppCta, HTMLStencilElement {
  }
  var HTMLAppCtaElement: {
    prototype: HTMLAppCtaElement;
    new (): HTMLAppCtaElement;
  };
  interface HTMLElementTagNameMap {
    "app-cta": HTMLAppCtaElement;
  }
  interface ElementTagNameMap {
    "app-cta": HTMLAppCtaElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-cta": JSXElements.AppCtaAttributes;
    }
  }
  namespace JSXElements {
    export interface AppCtaAttributes extends HTMLAttributes {
      linkUrl?: string;
      match?: MatchResults;
      
    }
  }
}


import {
  AppFooter as AppFooter
} from './components/app-footer/app-footer';

declare global {
  interface HTMLAppFooterElement extends AppFooter, HTMLStencilElement {
  }
  var HTMLAppFooterElement: {
    prototype: HTMLAppFooterElement;
    new (): HTMLAppFooterElement;
  };
  interface HTMLElementTagNameMap {
    "app-footer": HTMLAppFooterElement;
  }
  interface ElementTagNameMap {
    "app-footer": HTMLAppFooterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-footer": JSXElements.AppFooterAttributes;
    }
  }
  namespace JSXElements {
    export interface AppFooterAttributes extends HTMLAttributes {
      backgroundUrl?: string;
      linkUrl?: string;
      match?: MatchResults;
      
    }
  }
}


import {
  AppHeader as AppHeader
} from './components/app-header/app-header';

declare global {
  interface HTMLAppHeaderElement extends AppHeader, HTMLStencilElement {
  }
  var HTMLAppHeaderElement: {
    prototype: HTMLAppHeaderElement;
    new (): HTMLAppHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "app-header": HTMLAppHeaderElement;
  }
  interface ElementTagNameMap {
    "app-header": HTMLAppHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-header": JSXElements.AppHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHeaderAttributes extends HTMLAttributes {
      backgroundUrl?: string;
      linkUrl?: string;
      match?: MatchResults;
      
    }
  }
}


import {
  AppHero as AppHero
} from './components/app-hero/app-hero';

declare global {
  interface HTMLAppHeroElement extends AppHero, HTMLStencilElement {
  }
  var HTMLAppHeroElement: {
    prototype: HTMLAppHeroElement;
    new (): HTMLAppHeroElement;
  };
  interface HTMLElementTagNameMap {
    "app-hero": HTMLAppHeroElement;
  }
  interface ElementTagNameMap {
    "app-hero": HTMLAppHeroElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-hero": JSXElements.AppHeroAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHeroAttributes extends HTMLAttributes {
      backgroundUrl?: string;
      linkUrl?: string;
      match?: MatchResults;
      
    }
  }
}


import {
  ContentGraphic as ContentGraphic
} from './components/content-graphic/content-graphic';

declare global {
  interface HTMLContentGraphicElement extends ContentGraphic, HTMLStencilElement {
  }
  var HTMLContentGraphicElement: {
    prototype: HTMLContentGraphicElement;
    new (): HTMLContentGraphicElement;
  };
  interface HTMLElementTagNameMap {
    "content-graphic": HTMLContentGraphicElement;
  }
  interface ElementTagNameMap {
    "content-graphic": HTMLContentGraphicElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "content-graphic": JSXElements.ContentGraphicAttributes;
    }
  }
  namespace JSXElements {
    export interface ContentGraphicAttributes extends HTMLAttributes {
      imgUrl?: string;
      match?: MatchResults;
      reverse?: boolean;
      
    }
  }
}


import {
  AppAbout as AppAbout
} from './pages/app-about/app-about';

declare global {
  interface HTMLAppAboutElement extends AppAbout, HTMLStencilElement {
  }
  var HTMLAppAboutElement: {
    prototype: HTMLAppAboutElement;
    new (): HTMLAppAboutElement;
  };
  interface HTMLElementTagNameMap {
    "app-about": HTMLAppAboutElement;
  }
  interface ElementTagNameMap {
    "app-about": HTMLAppAboutElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-about": JSXElements.AppAboutAttributes;
    }
  }
  namespace JSXElements {
    export interface AppAboutAttributes extends HTMLAttributes {
      match?: MatchResults;
      
    }
  }
}


import {
  AppContact as AppContact
} from './pages/app-contact/app-contact';

declare global {
  interface HTMLAppContactElement extends AppContact, HTMLStencilElement {
  }
  var HTMLAppContactElement: {
    prototype: HTMLAppContactElement;
    new (): HTMLAppContactElement;
  };
  interface HTMLElementTagNameMap {
    "app-contact": HTMLAppContactElement;
  }
  interface ElementTagNameMap {
    "app-contact": HTMLAppContactElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-contact": JSXElements.AppContactAttributes;
    }
  }
  namespace JSXElements {
    export interface AppContactAttributes extends HTMLAttributes {
      match?: MatchResults;
      
    }
  }
}


import {
  AppHome as AppHome
} from './pages/app-home/app-home';

declare global {
  interface HTMLAppHomeElement extends AppHome, HTMLStencilElement {
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-home": JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      match?: MatchResults;
      
    }
  }
}


import {
  AppServices as AppServices
} from './pages/app-services/app-services';

declare global {
  interface HTMLAppServicesElement extends AppServices, HTMLStencilElement {
  }
  var HTMLAppServicesElement: {
    prototype: HTMLAppServicesElement;
    new (): HTMLAppServicesElement;
  };
  interface HTMLElementTagNameMap {
    "app-services": HTMLAppServicesElement;
  }
  interface ElementTagNameMap {
    "app-services": HTMLAppServicesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-services": JSXElements.AppServicesAttributes;
    }
  }
  namespace JSXElements {
    export interface AppServicesAttributes extends HTMLAttributes {
      match?: MatchResults;
      
    }
  }
}


import {
  OpenForgeApp as OpenForgeApp
} from './pages/open-forge-app/open-forge-app';

declare global {
  interface HTMLOpenForgeAppElement extends OpenForgeApp, HTMLStencilElement {
  }
  var HTMLOpenForgeAppElement: {
    prototype: HTMLOpenForgeAppElement;
    new (): HTMLOpenForgeAppElement;
  };
  interface HTMLElementTagNameMap {
    "open-forge-app": HTMLOpenForgeAppElement;
  }
  interface ElementTagNameMap {
    "open-forge-app": HTMLOpenForgeAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "open-forge-app": JSXElements.OpenForgeAppAttributes;
    }
  }
  namespace JSXElements {
    export interface OpenForgeAppAttributes extends HTMLAttributes {
      
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
